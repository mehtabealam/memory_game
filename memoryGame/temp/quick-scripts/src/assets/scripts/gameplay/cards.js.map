{"version":3,"sources":["assets/scripts/gameplay/cards.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {GameManager} from \"../managers/GameManager\";\nimport SoundManager from \"../managers/SoundManager\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Card extends cc.Component {\n\n    private _cardName : string = \"\";\n    private _isOpen : boolean = true;\n    private _delagateScript : cc.Component = null;\n\n    @property(cc.Sprite)\n    image: cc.Sprite = null;\n\n    @property(cc.Node)\n    animationNode: cc.Node = null;\n\n\n    @property(cc.Sprite)\n    back: cc.Sprite = null;\n\n    @property(cc.Sprite)\n    front: cc.Sprite = null;\n\n    @property(cc.AudioClip)\n    cardFlip: cc.Node = null;\n\n    @property(cc.Node)\n    overLay: cc.Node = null;\n\n    \n\n\n  \n\n\n\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n\n    }\n\n    setDelegate(delegate:cc.Component){\n        this._delagateScript = delegate;\n    }\n\n    setUpUI (spriteFrameKey, level, mode, cardSpriteFrame) {\n        this._cardName = spriteFrameKey;\n        // console.log(\"card name\", spriteFrameKey, cardSpriteFrame);\n        this.image.spriteFrame= GameManager.getInstance().getSpriteFrame(mode, level, spriteFrameKey);\n        this.front.spriteFrame = cardSpriteFrame;\n        this.back.spriteFrame = cardSpriteFrame;\n        this.animationNode.setContentSize(cardSpriteFrame._originalSize);\n        this.node.setContentSize(cardSpriteFrame._originalSize);\n    }\n\n\n    startAnimation(){\n\n    }\n\n    getCardName(){\n        return this._cardName;\n    }\n\n    onCardClicked(){\n        // console.log(\"showcards\");\n        if(!this._isOpen){\n            this._delagateScript.showCard(this.node);\n        }\n      \n        // this.reveal();\n    }\n\n\n   setFaceUp(showFace: boolean): void {\n        this.back.node.active = !showFace;\n        this._isOpen = showFace;\n    }\n\n    reveal( ): void {\n        if(this._isOpen){\n            return;\n        }\n\n        SoundManager.getInstance().playEffect(this.cardFlip,false);\n        let callFunc1 = cc.callFunc(function () {\n            this.setFaceUp(true);\n        }, this);\n        let callFunc2 = cc.callFunc(function () {\n            // callFunc();\n        }, this);\n        let initialScale = 1;\n        // console.log(\"initialScale\", initialScale);\n        let revealAction = cc.sequence(cc.scaleTo(0.1, 0, this.node.scale), callFunc1, cc.scaleTo(0.1, initialScale, initialScale));\n        this.animationNode.runAction(revealAction);\n    }\n\n\n    unreveal ( ) {\n        let callFunc1 = cc.callFunc(function () {\n            this.setFaceUp(false);\n        }, this);\n        let unrevealAction = cc.sequence(cc.scaleTo(0.1, 0, 1), callFunc1, cc.scaleTo(0.1, 1, 1));\n        this.animationNode.runAction(unrevealAction);\n    }\n\n    playCorrectAnimation(){\n        let bounce = cc.scaleTo(0.1, 0.9,0.9).easing(cc.easeBounceInOut());\n        let correctAnimation = cc.sequence(bounce, cc.delayTime(0.2), cc.scaleTo(0.1, 1, 1));\n        this.animationNode.runAction(correctAnimation);\n    }\n\n\n    enableOverlay(){\n        this.overLay.active = true;\n\n    }\n\n    disableOverlay(){\n        this.overLay.active = false;\n\n    }\n\n    isOpen(){\n        // console.log(\"isopen\", this._isOpen);\n        return this._isOpen;\n    }\n\n    // update (dt) {}\n}\n"]}