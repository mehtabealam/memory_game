{"version":3,"sources":["assets/scripts/Localisation/localiser.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,uDAAsD;AAEhD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAuC,6BAAY;IAAnD;QAAA,qEA2BC;QA1BW,mBAAa,GAAY,EAAE,CAAC;QAEpC,SAAG,GAAG,EAAE,CAAC;;IAwBb,CAAC;IAtBG,0BAAM,GAAN;QAAA,iBAOC;QANG,qCAAqC;QACrC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,EAAE;YAC5B,uCAAuC;YACvC,KAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAE,CAAA;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,gCAAY,GAAZ,UAAa,KAAK;QACd,mDAAmD;QACnD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,mCAAe,GAAf;QACI,qGAAqG;QACrG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,yBAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxF,IAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAC;YAC7B,IAAI,UAAU,GAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAC,IAAI,CAAC,aAAa,CAAE,CAAC;YAC5F,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC;SACxD;IACL,CAAC;IAvBD;QADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAG,mCAAmC,EAAC,CAAC;0CAC/D;IAHQ,SAAS;QAD7B,OAAO;OACa,SAAS,CA2B7B;IAAD,gBAAC;CA3BD,AA2BC,CA3BsC,EAAE,CAAC,SAAS,GA2BlD;kBA3BoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import { GAME_MODE } from \"../helper/constants\";\nimport { GameManager } from \"../managers/GameManager\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Localiser extends cc.Component {\n    private _replaceValue : string = \"\";\n    @property({type :String, tooltip : \"key of string that to be localise\"})\n    key = \"\";\n\n    onLoad(){\n        // console.log(\"on start\", this.key);\n        cc.game.on('onLanguageChanged', ()=>{\n            // console.log(\"language has changed\");\n            this.setStringForKey();\n        } )\n        this.setStringForKey();\n    }\n\n    replaceValue(value){\n        // console.log(\"value to replace\", value,this.key);\n        this._replaceValue = value;\n    }\n\n    setStringForKey(){\n        // console.log(\"ke11y\", this.key,  GameManager.getInstance().getString(this.key),this._replaceValue);\n        this.node.getComponent(cc.Label).string = GameManager.getInstance().getString(this.key);\n        if(this._replaceValue.length > 0){\n            let tempString =  this.node.getComponent(cc.Label).string.replace(\"%s\",this._replaceValue );\n            this.node.getComponent(cc.Label).string = tempString;\n        }  \n    }\n}"]}